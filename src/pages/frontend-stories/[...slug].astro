---
import { getCollection, render } from 'astro:content'

import BaseLayout from '@/layouts/BaseLayout.astro'
import Badge from '@/components/ui/Badge.astro'
import FadeOutDown from '@/components/ui/FadeOutDown.astro'
import FormattedDate from '@/components/ui/FormattedDate.astro'
import Hero from '@/components/ui/Hero.astro'
import Heading from '@/components/ui/Heading.astro'
import MDXLink from '@/components/ui/MDXLink.astro'
import Webring from '@/components/ui/Webring.astro'

export async function getStaticPaths() {
    const posts = await getCollection('posts', ({ data }) => !data.isDraft)
    
    return posts.map(post => ({
        params: { slug: post.id }, props: { post },
    }));
}

const { post } = Astro.props
const { Content } = await render(post)
const { title, description, image, pubDate, tags, author } = post.data
---

<BaseLayout title=`${title} - Roland Franke` {description} ogType="article" image={image?.url}>
    <Hero data-grid="fullbleed">
        <FadeOutDown class="flow" data-column="medium">
            <Heading tagName="h1" size="h1" set:html={title} />

            <p class="flex">
                {
                    author && (
                        <span>
                            {' '}
                            by <span class="italic">{author}</span>
                        </span>
                        <span class="dot">â€¢</span>
                    )
                }
                <FormattedDate {pubDate} />
            </p>

            <div class="flex inline-wrap">
                {tags.map((tag) => <Badge id={tag}>{tag}</Badge>)}
            </div>
        </FadeOutDown>
    </Hero>

    <div class="grid lane lane--light" data-grid="fullbleed">
        <cq-document-vi>
            <div class="prose flow">
                <Content components={{ a: MDXLink }}/>
            </div>
        </cq-document-vi>
    </div>

    <div class="grid lane lane--dark" data-grid="fullbleed">
        <Webring />
    </div>
</BaseLayout>

<style>
    cq-document-vi {
        grid-column: xsmall;
    }

    .flex {
        gap: 1rem;
    }

    .dot {
        font-size: .75rem;
        color: hsl(from var(--color-primary-400) h 90% 50%);
        font-feature-settings: 'aalt' on;
    }
</style>
