---
import { type GetStaticPaths } from 'astro'
import { getCollection, getEntries } from 'astro:content'

import BaseLayout from '@/layouts/BaseLayout.astro'
import Badge from '@/components/ui/Badge.astro'
import FadeOutDown from '@/components/ui/FadeOutDown.astro'
import FormattedDate from '@/components/ui/FormattedDate.astro'
import Hero from '@/components/ui/Hero.astro'
import Heading from '@/components/ui/Heading.astro'

export const getStaticPaths = (async () => {
    const posts = await getCollection('posts', ({ data }) => !data.isDraft)

    return posts.map((post) => ({
        params: {
            slug: post.slug,
        },
        props: {
            post,
        },
    }))
}) satisfies GetStaticPaths

const { post } = Astro.props
const { Content } = await post.render()
const { title, description, image, pubDate, tags } = post.data
const tagsData = await getEntries(tags)
---

<BaseLayout {title} {description}>
    <Hero slot="hero">
        <FadeOutDown class="flow" data-column="medium">
            <Heading tagName="h1" size="h1" set:html={title} />

            <FormattedDate {pubDate} />

            <div class="flex inline-wrap">
                {tagsData.map(({ id, data }) => <Badge id={id}>{data.title}</Badge>)}
            </div>
        </FadeOutDown>
    </Hero>

    <div class="grid lane lane--light" data-grid="fullbleed">
        <cq-document-vi>
            <div class="prose flow">
                <Content />
            </div>
        </cq-document-vi>
    </div>
</BaseLayout>

<style>
    cq-document-vi {
        grid-column: xsmall;
    }
</style>
